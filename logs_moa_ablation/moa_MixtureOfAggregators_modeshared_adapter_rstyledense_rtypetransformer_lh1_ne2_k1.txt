Results are saved in:  Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_shared_adapter_dense_topk1_localheadTrue_router_arch_transformer_seed38

Initialize datasets...
Found device:  1 x  cuda
Reading files from:  data_cross_val_8_classes/data_fold_1
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-1): 2 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): TransformerExpert(
    (projection): Sequential(
      (0): None
      (1): Linear(in_features=512, out_features=128, bias=True)
      (2): ReLU()
      (3): Linear(in_features=128, out_features=512, bias=True)
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (transformer): TransformerBlocks(
      (layers): ModuleList(
        (0-1): 2 x ModuleList(
          (0): PreNorm(
            (fn): Attention(
              (attend): Softmax(dim=-1)
              (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
              (to_out): Sequential(
                (0): Linear(in_features=512, out_features=512, bias=True)
                (1): Dropout(p=0.1, inplace=False)
              )
            )
            (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
          (1): PreNorm(
            (fn): FeedForward(
              (net): Sequential(
                (0): Linear(in_features=512, out_features=1024, bias=True)
                (1): GELU(approximate='none')
                (2): Dropout(p=0.1, inplace=False)
                (3): Linear(in_features=1024, out_features=512, bias=True)
                (4): Dropout(p=0.1, inplace=False)
              )
            )
            (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
    (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    (mlp_head): Sequential(
      (0): Linear(in_features=512, out_features=64, bias=True)
      (1): ReLU()
      (2): Linear(in_features=64, out_features=2, bias=True)
    )
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
