Results are saved in:  Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381

Initialize datasets...
Found device:  1 x  cuda
Reading files from:  data_cross_val_8_classes/data_fold_1
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-3): 4 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): Sequential(
    (0): Linear(in_features=512, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=4, bias=True)
  )
  (head): Sequential(
    (0): Linear(in_features=512, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=8, bias=True)
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
- ep: 1/150, loss: 1.881, acc: 0.298, balanced acc: 0.195,weighted_f1: 0.219, 14s, train
- ep: 1/150, loss: 1.647, acc: 0.413, balanced acc: 0.309,weighted_f1: 0.353, 2s, val
🔖  Saved new best model (metric=1.6473)
- ep: 2/150, loss: 1.539, acc: 0.469, balanced acc: 0.365,weighted_f1: 0.418, 12s, train
- ep: 2/150, loss: 1.411, acc: 0.468, balanced acc: 0.365,weighted_f1: 0.392, 1s, val
🔖  Saved new best model (metric=1.4110)
- ep: 3/150, loss: 1.317, acc: 0.540, balanced acc: 0.445,weighted_f1: 0.490, 12s, train
- ep: 3/150, loss: 1.179, acc: 0.572, balanced acc: 0.480,weighted_f1: 0.513, 1s, val
🔖  Saved new best model (metric=1.1792)
- ep: 4/150, loss: 1.130, acc: 0.614, balanced acc: 0.536,weighted_f1: 0.585, 12s, train
- ep: 4/150, loss: 1.102, acc: 0.599, balanced acc: 0.527,weighted_f1: 0.551, 1s, val
🔖  Saved new best model (metric=1.1021)
- ep: 5/150, loss: 0.991, acc: 0.660, balanced acc: 0.598,weighted_f1: 0.643, 12s, train
- ep: 5/150, loss: 1.078, acc: 0.602, balanced acc: 0.530,weighted_f1: 0.554, 1s, val
🔖  Saved new best model (metric=1.0781)
- ep: 6/150, loss: 0.929, acc: 0.667, balanced acc: 0.612,weighted_f1: 0.657, 12s, train
- ep: 6/150, loss: 1.329, acc: 0.532, balanced acc: 0.475,weighted_f1: 0.520, 1s, val
- ep: 7/150, loss: 1.490, acc: 0.457, balanced acc: 0.366,weighted_f1: 0.416, 12s, train
- ep: 7/150, loss: 1.356, acc: 0.514, balanced acc: 0.419,weighted_f1: 0.447, 1s, val
- ep: 8/150, loss: 1.334, acc: 0.525, balanced acc: 0.439,weighted_f1: 0.478, 12s, train
- ep: 8/150, loss: 1.179, acc: 0.569, balanced acc: 0.498,weighted_f1: 0.549, 1s, val
- ep: 9/150, loss: 1.107, acc: 0.593, balanced acc: 0.515,weighted_f1: 0.567, 12s, train
- ep: 9/150, loss: 1.124, acc: 0.587, balanced acc: 0.501,weighted_f1: 0.537, 1s, val
- ep: 10/150, loss: 0.967, acc: 0.660, balanced acc: 0.588,weighted_f1: 0.634, 12s, train
- ep: 10/150, loss: 1.067, acc: 0.584, balanced acc: 0.496,weighted_f1: 0.538, 1s, val
🔖  Saved new best model (metric=1.0673)
- ep: 11/150, loss: 0.941, acc: 0.676, balanced acc: 0.611,weighted_f1: 0.655, 12s, train
- ep: 11/150, loss: 1.063, acc: 0.581, balanced acc: 0.498,weighted_f1: 0.545, 1s, val
🔖  Saved new best model (metric=1.0630)
- ep: 12/150, loss: 0.928, acc: 0.669, balanced acc: 0.601,weighted_f1: 0.648, 12s, train
- ep: 12/150, loss: 1.065, acc: 0.593, balanced acc: 0.511,weighted_f1: 0.561, 1s, val
- ep: 13/150, loss: 0.914, acc: 0.680, balanced acc: 0.617,weighted_f1: 0.662, 12s, train
- ep: 13/150, loss: 1.062, acc: 0.599, balanced acc: 0.517,weighted_f1: 0.568, 2s, val
🔖  Saved new best model (metric=1.0615)
- ep: 14/150, loss: 0.901, acc: 0.684, balanced acc: 0.622,weighted_f1: 0.667, 12s, train
- ep: 14/150, loss: 1.039, acc: 0.606, balanced acc: 0.527,weighted_f1: 0.577, 1s, val
🔖  Saved new best model (metric=1.0394)
- ep: 15/150, loss: 0.884, acc: 0.692, balanced acc: 0.631,weighted_f1: 0.679, 12s, train
- ep: 15/150, loss: 1.057, acc: 0.609, balanced acc: 0.531,weighted_f1: 0.582, 1s, val
- ep: 16/150, loss: 0.879, acc: 0.693, balanced acc: 0.633,weighted_f1: 0.679, 12s, train
- ep: 16/150, loss: 1.057, acc: 0.615, balanced acc: 0.537,weighted_f1: 0.589, 1s, val
- ep: 17/150, loss: 0.875, acc: 0.695, balanced acc: 0.636,weighted_f1: 0.682, 12s, train
- ep: 17/150, loss: 1.062, acc: 0.609, balanced acc: 0.533,weighted_f1: 0.579, 1s, val
- ep: 18/150, loss: 0.858, acc: 0.697, balanced acc: 0.639,weighted_f1: 0.683, 12s, train
- ep: 18/150, loss: 1.042, acc: 0.606, balanced acc: 0.527,weighted_f1: 0.579, 1s, val
- ep: 19/150, loss: 0.842, acc: 0.713, balanced acc: 0.655,weighted_f1: 0.698, 12s, train
- ep: 19/150, loss: 1.035, acc: 0.609, balanced acc: 0.530,weighted_f1: 0.582, 1s, val
🔖  Saved new best model (metric=1.0349)
- ep: 20/150, loss: 0.833, acc: 0.727, balanced acc: 0.675,weighted_f1: 0.716, 12s, train
- ep: 20/150, loss: 1.027, acc: 0.618, balanced acc: 0.544,weighted_f1: 0.591, 1s, val
🔖  Saved new best model (metric=1.0271)
- ep: 21/150, loss: 0.828, acc: 0.715, balanced acc: 0.663,weighted_f1: 0.704, 12s, train
- ep: 21/150, loss: 1.046, acc: 0.612, balanced acc: 0.538,weighted_f1: 0.586, 1s, val
- ep: 22/150, loss: 0.811, acc: 0.716, balanced acc: 0.660,weighted_f1: 0.704, 12s, train
- ep: 22/150, loss: 1.027, acc: 0.621, balanced acc: 0.549,weighted_f1: 0.594, 1s, val
- ep: 23/150, loss: 0.808, acc: 0.728, balanced acc: 0.674,weighted_f1: 0.717, 12s, train
- ep: 23/150, loss: 1.047, acc: 0.609, balanced acc: 0.527,weighted_f1: 0.581, 1s, val
- ep: 24/150, loss: 0.796, acc: 0.734, balanced acc: 0.685,weighted_f1: 0.725, 12s, train
- ep: 24/150, loss: 1.040, acc: 0.618, balanced acc: 0.548,weighted_f1: 0.591, 1s, val
- ep: 25/150, loss: 0.788, acc: 0.726, balanced acc: 0.675,weighted_f1: 0.716, 12s, train
- ep: 25/150, loss: 1.041, acc: 0.618, balanced acc: 0.544,weighted_f1: 0.591, 1s, val
- ep: 26/150, loss: 0.776, acc: 0.738, balanced acc: 0.688,weighted_f1: 0.729, 12s, train
- ep: 26/150, loss: 1.025, acc: 0.627, balanced acc: 0.556,weighted_f1: 0.603, 1s, val
🔖  Saved new best model (metric=1.0247)
- ep: 27/150, loss: 0.764, acc: 0.741, balanced acc: 0.694,weighted_f1: 0.731, 12s, train
- ep: 27/150, loss: 1.037, acc: 0.621, balanced acc: 0.550,weighted_f1: 0.595, 1s, val
- ep: 28/150, loss: 0.749, acc: 0.757, balanced acc: 0.714,weighted_f1: 0.749, 12s, train
- ep: 28/150, loss: 1.020, acc: 0.627, balanced acc: 0.562,weighted_f1: 0.605, 1s, val
🔖  Saved new best model (metric=1.0204)
- ep: 29/150, loss: 0.741, acc: 0.752, balanced acc: 0.703,weighted_f1: 0.744, 12s, train
- ep: 29/150, loss: 1.020, acc: 0.627, balanced acc: 0.561,weighted_f1: 0.603, 1s, val
🔖  Saved new best model (metric=1.0198)
- ep: 30/150, loss: 0.731, acc: 0.764, balanced acc: 0.722,weighted_f1: 0.757, 12s, train
- ep: 30/150, loss: 1.022, acc: 0.630, balanced acc: 0.563,weighted_f1: 0.608, 1s, val
- ep: 31/150, loss: 0.722, acc: 0.759, balanced acc: 0.715,weighted_f1: 0.752, 13s, train
- ep: 31/150, loss: 1.023, acc: 0.636, balanced acc: 0.574,weighted_f1: 0.613, 1s, val
- ep: 32/150, loss: 0.713, acc: 0.765, balanced acc: 0.720,weighted_f1: 0.758, 12s, train
- ep: 32/150, loss: 1.019, acc: 0.633, balanced acc: 0.566,weighted_f1: 0.610, 1s, val
🔖  Saved new best model (metric=1.0195)
- ep: 33/150, loss: 0.691, acc: 0.775, balanced acc: 0.736,weighted_f1: 0.771, 12s, train
- ep: 33/150, loss: 1.025, acc: 0.624, balanced acc: 0.553,weighted_f1: 0.602, 1s, val
- ep: 34/150, loss: 0.695, acc: 0.766, balanced acc: 0.718,weighted_f1: 0.759, 12s, train
- ep: 34/150, loss: 1.031, acc: 0.627, balanced acc: 0.558,weighted_f1: 0.604, 1s, val
- ep: 35/150, loss: 0.675, acc: 0.782, balanced acc: 0.743,weighted_f1: 0.776, 11s, train
- ep: 35/150, loss: 1.008, acc: 0.624, balanced acc: 0.552,weighted_f1: 0.601, 1s, val
🔖  Saved new best model (metric=1.0079)
- ep: 36/150, loss: 0.664, acc: 0.785, balanced acc: 0.744,weighted_f1: 0.780, 12s, train
- ep: 36/150, loss: 1.018, acc: 0.633, balanced acc: 0.568,weighted_f1: 0.613, 2s, val
- ep: 37/150, loss: 0.652, acc: 0.798, balanced acc: 0.758,weighted_f1: 0.793, 12s, train
- ep: 37/150, loss: 1.020, acc: 0.627, balanced acc: 0.557,weighted_f1: 0.602, 1s, val
- ep: 38/150, loss: 0.649, acc: 0.788, balanced acc: 0.750,weighted_f1: 0.782, 12s, train
- ep: 38/150, loss: 1.012, acc: 0.633, balanced acc: 0.572,weighted_f1: 0.612, 1s, val
- ep: 39/150, loss: 0.627, acc: 0.803, balanced acc: 0.760,weighted_f1: 0.797, 12s, train
- ep: 39/150, loss: 1.004, acc: 0.636, balanced acc: 0.575,weighted_f1: 0.615, 1s, val
🔖  Saved new best model (metric=1.0039)
- ep: 40/150, loss: 0.620, acc: 0.812, balanced acc: 0.773,weighted_f1: 0.808, 13s, train
- ep: 40/150, loss: 1.028, acc: 0.636, balanced acc: 0.569,weighted_f1: 0.616, 1s, val
- ep: 41/150, loss: 0.612, acc: 0.814, balanced acc: 0.776,weighted_f1: 0.810, 12s, train
- ep: 41/150, loss: 1.022, acc: 0.636, balanced acc: 0.569,weighted_f1: 0.617, 1s, val
- ep: 42/150, loss: 0.604, acc: 0.809, balanced acc: 0.771,weighted_f1: 0.805, 12s, train
- ep: 42/150, loss: 1.024, acc: 0.642, balanced acc: 0.581,weighted_f1: 0.624, 1s, val
- ep: 43/150, loss: 0.591, acc: 0.816, balanced acc: 0.781,weighted_f1: 0.812, 12s, train
- ep: 43/150, loss: 1.028, acc: 0.645, balanced acc: 0.585,weighted_f1: 0.627, 1s, val
- ep: 44/150, loss: 0.580, acc: 0.826, balanced acc: 0.792,weighted_f1: 0.823, 12s, train
- ep: 44/150, loss: 1.013, acc: 0.633, balanced acc: 0.574,weighted_f1: 0.615, 1s, val
- ep: 45/150, loss: 0.569, acc: 0.832, balanced acc: 0.801,weighted_f1: 0.829, 11s, train
- ep: 45/150, loss: 1.020, acc: 0.636, balanced acc: 0.576,weighted_f1: 0.619, 1s, val
- ep: 46/150, loss: 0.556, acc: 0.832, balanced acc: 0.798,weighted_f1: 0.828, 13s, train
- ep: 46/150, loss: 1.025, acc: 0.639, balanced acc: 0.582,weighted_f1: 0.621, 1s, val
- ep: 47/150, loss: 0.543, acc: 0.829, balanced acc: 0.792,weighted_f1: 0.825, 12s, train
- ep: 47/150, loss: 1.021, acc: 0.642, balanced acc: 0.584,weighted_f1: 0.629, 1s, val
- ep: 48/150, loss: 0.542, acc: 0.835, balanced acc: 0.796,weighted_f1: 0.831, 12s, train
- ep: 48/150, loss: 1.036, acc: 0.648, balanced acc: 0.592,weighted_f1: 0.631, 1s, val
- ep: 49/150, loss: 0.527, acc: 0.845, balanced acc: 0.812,weighted_f1: 0.841, 12s, train
- ep: 49/150, loss: 1.053, acc: 0.633, balanced acc: 0.572,weighted_f1: 0.616, 1s, val
- ep: 50/150, loss: 0.508, acc: 0.855, balanced acc: 0.825,weighted_f1: 0.852, 12s, train
- ep: 50/150, loss: 1.032, acc: 0.636, balanced acc: 0.569,weighted_f1: 0.620, 1s, val
- ep: 51/150, loss: 0.496, acc: 0.856, balanced acc: 0.827,weighted_f1: 0.854, 11s, train
- ep: 51/150, loss: 1.044, acc: 0.642, balanced acc: 0.580,weighted_f1: 0.624, 1s, val
- ep: 52/150, loss: 0.484, acc: 0.866, balanced acc: 0.836,weighted_f1: 0.864, 12s, train
- ep: 52/150, loss: 1.042, acc: 0.645, balanced acc: 0.582,weighted_f1: 0.631, 1s, val
- ep: 53/150, loss: 0.473, acc: 0.873, balanced acc: 0.847,weighted_f1: 0.871, 12s, train
- ep: 53/150, loss: 1.041, acc: 0.642, balanced acc: 0.582,weighted_f1: 0.627, 1s, val
- ep: 54/150, loss: 0.458, acc: 0.869, balanced acc: 0.841,weighted_f1: 0.866, 12s, train
- ep: 54/150, loss: 1.051, acc: 0.645, balanced acc: 0.581,weighted_f1: 0.629, 1s, val
⏹️  Early-stopping triggered after 53 epochs
train: loss=0.5559 acc=0.819 balAcc=0.785 f1w=0.814
Saved gates for train to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_0/gates_train.npy
val: loss=1.0039 acc=0.636 balAcc=0.575 f1w=0.615
Saved gates for val to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_0/gates_val.npy
test: loss=0.8692 acc=0.667 balAcc=0.594 f1w=0.651
Saved gates for test to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_0/gates_test.npy
Inference completed for splits: train, val, test
✅ Saved 2043 patients to 'Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_0/patient_data.h5'.

------------------------Final report--------------------------
Runtime 0h13min17s
Fold 0
Architecture MixtureOfAggregators
Data path /lustre/groups/labs/marr/qscd01/workspace/beluga_features_extracted/dinobloom-b
Result folder Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_0
Scheduler ReduceLROnPlateau
Weight decay 0.01
Early stopping 15
Gradient accumulation 16
Seed 38
max. Epochs 150
Learning rate 5e-05
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-3): 4 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): Sequential(
    (0): Linear(in_features=512, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=4, bias=True)
  )
  (head): Sequential(
    (0): Linear(in_features=512, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=8, bias=True)
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
- ep: 1/150, loss: 1.884, acc: 0.305, balanced acc: 0.225,weighted_f1: 0.240, 12s, train
- ep: 1/150, loss: 1.739, acc: 0.391, balanced acc: 0.277,weighted_f1: 0.303, 1s, val
🔖  Saved new best model (metric=1.7386)
- ep: 2/150, loss: 1.621, acc: 0.429, balanced acc: 0.344,weighted_f1: 0.370, 12s, train
- ep: 2/150, loss: 1.482, acc: 0.456, balanced acc: 0.360,weighted_f1: 0.397, 1s, val
🔖  Saved new best model (metric=1.4823)
- ep: 3/150, loss: 1.323, acc: 0.541, balanced acc: 0.463,weighted_f1: 0.493, 12s, train
- ep: 3/150, loss: 1.357, acc: 0.492, balanced acc: 0.408,weighted_f1: 0.444, 1s, val
🔖  Saved new best model (metric=1.3572)
- ep: 4/150, loss: 1.206, acc: 0.588, balanced acc: 0.514,weighted_f1: 0.548, 12s, train
- ep: 4/150, loss: 1.372, acc: 0.505, balanced acc: 0.414,weighted_f1: 0.459, 1s, val
- ep: 5/150, loss: 1.205, acc: 0.586, balanced acc: 0.504,weighted_f1: 0.552, 12s, train
- ep: 5/150, loss: 1.329, acc: 0.523, balanced acc: 0.415,weighted_f1: 0.460, 1s, val
🔖  Saved new best model (metric=1.3290)
- ep: 6/150, loss: 1.232, acc: 0.575, balanced acc: 0.487,weighted_f1: 0.532, 12s, train
- ep: 6/150, loss: 1.232, acc: 0.550, balanced acc: 0.483,weighted_f1: 0.530, 1s, val
🔖  Saved new best model (metric=1.2316)
- ep: 7/150, loss: 1.020, acc: 0.655, balanced acc: 0.591,weighted_f1: 0.631, 12s, train
- ep: 7/150, loss: 1.115, acc: 0.581, balanced acc: 0.523,weighted_f1: 0.557, 1s, val
🔖  Saved new best model (metric=1.1148)
- ep: 8/150, loss: 0.929, acc: 0.678, balanced acc: 0.618,weighted_f1: 0.662, 13s, train
- ep: 8/150, loss: 1.115, acc: 0.615, balanced acc: 0.534,weighted_f1: 0.597, 1s, val
🔖  Saved new best model (metric=1.1146)
- ep: 9/150, loss: 0.833, acc: 0.713, balanced acc: 0.658,weighted_f1: 0.703, 12s, train
- ep: 9/150, loss: 1.076, acc: 0.624, balanced acc: 0.573,weighted_f1: 0.608, 1s, val
🔖  Saved new best model (metric=1.0760)
- ep: 10/150, loss: 0.702, acc: 0.771, balanced acc: 0.726,weighted_f1: 0.765, 13s, train
- ep: 10/150, loss: 1.086, acc: 0.602, balanced acc: 0.542,weighted_f1: 0.594, 1s, val
- ep: 11/150, loss: 0.630, acc: 0.793, balanced acc: 0.757,weighted_f1: 0.786, 13s, train
- ep: 11/150, loss: 1.200, acc: 0.599, balanced acc: 0.548,weighted_f1: 0.600, 1s, val
- ep: 12/150, loss: 0.546, acc: 0.825, balanced acc: 0.792,weighted_f1: 0.822, 12s, train
- ep: 12/150, loss: 1.277, acc: 0.587, balanced acc: 0.518,weighted_f1: 0.563, 1s, val
- ep: 13/150, loss: 0.436, acc: 0.875, balanced acc: 0.850,weighted_f1: 0.874, 12s, train
- ep: 13/150, loss: 1.168, acc: 0.633, balanced acc: 0.580,weighted_f1: 0.629, 1s, val
- ep: 14/150, loss: 0.333, acc: 0.921, balanced acc: 0.907,weighted_f1: 0.920, 13s, train
- ep: 14/150, loss: 1.160, acc: 0.651, balanced acc: 0.596,weighted_f1: 0.645, 1s, val
- ep: 15/150, loss: 0.284, acc: 0.940, balanced acc: 0.925,weighted_f1: 0.939, 12s, train
- ep: 15/150, loss: 1.159, acc: 0.648, balanced acc: 0.592,weighted_f1: 0.642, 1s, val
- ep: 16/150, loss: 0.269, acc: 0.950, balanced acc: 0.938,weighted_f1: 0.949, 12s, train
- ep: 16/150, loss: 1.169, acc: 0.639, balanced acc: 0.577,weighted_f1: 0.633, 1s, val
- ep: 17/150, loss: 0.264, acc: 0.943, balanced acc: 0.928,weighted_f1: 0.943, 12s, train
- ep: 17/150, loss: 1.178, acc: 0.633, balanced acc: 0.572,weighted_f1: 0.627, 1s, val
- ep: 18/150, loss: 0.252, acc: 0.951, balanced acc: 0.939,weighted_f1: 0.951, 12s, train
- ep: 18/150, loss: 1.182, acc: 0.642, balanced acc: 0.584,weighted_f1: 0.636, 1s, val
- ep: 19/150, loss: 0.255, acc: 0.944, balanced acc: 0.933,weighted_f1: 0.944, 12s, train
- ep: 19/150, loss: 1.190, acc: 0.639, balanced acc: 0.580,weighted_f1: 0.631, 1s, val
- ep: 20/150, loss: 0.266, acc: 0.935, balanced acc: 0.923,weighted_f1: 0.934, 12s, train
- ep: 20/150, loss: 1.199, acc: 0.651, balanced acc: 0.600,weighted_f1: 0.643, 1s, val
- ep: 21/150, loss: 0.237, acc: 0.954, balanced acc: 0.946,weighted_f1: 0.954, 11s, train
- ep: 21/150, loss: 1.198, acc: 0.651, balanced acc: 0.596,weighted_f1: 0.643, 2s, val
- ep: 22/150, loss: 0.231, acc: 0.955, balanced acc: 0.944,weighted_f1: 0.955, 12s, train
- ep: 22/150, loss: 1.214, acc: 0.648, balanced acc: 0.593,weighted_f1: 0.641, 1s, val
- ep: 23/150, loss: 0.245, acc: 0.942, balanced acc: 0.933,weighted_f1: 0.941, 11s, train
- ep: 23/150, loss: 1.217, acc: 0.639, balanced acc: 0.584,weighted_f1: 0.633, 1s, val
- ep: 24/150, loss: 0.228, acc: 0.952, balanced acc: 0.942,weighted_f1: 0.952, 12s, train
- ep: 24/150, loss: 1.241, acc: 0.627, balanced acc: 0.573,weighted_f1: 0.618, 1s, val
⏹️  Early-stopping triggered after 23 epochs
train: loss=0.6343 acc=0.778 balAcc=0.733 f1w=0.770
Saved gates for train to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_1/gates_train.npy
val: loss=1.0760 acc=0.624 balAcc=0.573 f1w=0.608
Saved gates for val to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_1/gates_val.npy
test: loss=1.0373 acc=0.636 balAcc=0.559 f1w=0.620
Saved gates for test to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_1/gates_test.npy
Inference completed for splits: train, val, test
✅ Saved 2043 patients to 'Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_1/patient_data.h5'.

------------------------Final report--------------------------
Runtime 0h19min20s
Fold 1
Architecture MixtureOfAggregators
Data path /lustre/groups/labs/marr/qscd01/workspace/beluga_features_extracted/dinobloom-b
Result folder Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_1
Scheduler ReduceLROnPlateau
Weight decay 0.01
Early stopping 15
Gradient accumulation 16
Seed 38
max. Epochs 150
Learning rate 5e-05
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-3): 4 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): Sequential(
    (0): Linear(in_features=512, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=4, bias=True)
  )
  (head): Sequential(
    (0): Linear(in_features=512, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=8, bias=True)
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
- ep: 1/150, loss: 1.880, acc: 0.299, balanced acc: 0.193,weighted_f1: 0.207, 13s, train
- ep: 1/150, loss: 1.697, acc: 0.364, balanced acc: 0.261,weighted_f1: 0.273, 1s, val
🔖  Saved new best model (metric=1.6966)
- ep: 2/150, loss: 1.589, acc: 0.434, balanced acc: 0.331,weighted_f1: 0.372, 13s, train
- ep: 2/150, loss: 1.468, acc: 0.511, balanced acc: 0.418,weighted_f1: 0.478, 1s, val
🔖  Saved new best model (metric=1.4685)
- ep: 3/150, loss: 1.347, acc: 0.528, balanced acc: 0.438,weighted_f1: 0.487, 13s, train
- ep: 3/150, loss: 1.348, acc: 0.535, balanced acc: 0.436,weighted_f1: 0.463, 1s, val
🔖  Saved new best model (metric=1.3477)
- ep: 4/150, loss: 1.110, acc: 0.620, balanced acc: 0.536,weighted_f1: 0.586, 13s, train
- ep: 4/150, loss: 1.167, acc: 0.596, balanced acc: 0.516,weighted_f1: 0.556, 1s, val
🔖  Saved new best model (metric=1.1674)
- ep: 5/150, loss: 0.966, acc: 0.660, balanced acc: 0.590,weighted_f1: 0.642, 13s, train
- ep: 5/150, loss: 1.090, acc: 0.627, balanced acc: 0.569,weighted_f1: 0.607, 1s, val
🔖  Saved new best model (metric=1.0902)
- ep: 6/150, loss: 0.858, acc: 0.711, balanced acc: 0.653,weighted_f1: 0.695, 12s, train
- ep: 6/150, loss: 1.070, acc: 0.624, balanced acc: 0.553,weighted_f1: 0.607, 1s, val
🔖  Saved new best model (metric=1.0696)
- ep: 7/150, loss: 0.725, acc: 0.754, balanced acc: 0.708,weighted_f1: 0.746, 12s, train
- ep: 7/150, loss: 1.153, acc: 0.609, balanced acc: 0.536,weighted_f1: 0.577, 1s, val
- ep: 8/150, loss: 0.636, acc: 0.794, balanced acc: 0.756,weighted_f1: 0.790, 12s, train
- ep: 8/150, loss: 1.158, acc: 0.657, balanced acc: 0.596,weighted_f1: 0.632, 1s, val
- ep: 9/150, loss: 0.521, acc: 0.839, balanced acc: 0.812,weighted_f1: 0.836, 12s, train
- ep: 9/150, loss: 1.181, acc: 0.609, balanced acc: 0.561,weighted_f1: 0.611, 1s, val
- ep: 10/150, loss: 0.435, acc: 0.881, balanced acc: 0.862,weighted_f1: 0.879, 12s, train
- ep: 10/150, loss: 1.216, acc: 0.639, balanced acc: 0.568,weighted_f1: 0.616, 1s, val
- ep: 11/150, loss: 0.304, acc: 0.938, balanced acc: 0.925,weighted_f1: 0.938, 12s, train
- ep: 11/150, loss: 1.186, acc: 0.667, balanced acc: 0.598,weighted_f1: 0.646, 1s, val
- ep: 12/150, loss: 0.278, acc: 0.949, balanced acc: 0.937,weighted_f1: 0.948, 11s, train
- ep: 12/150, loss: 1.197, acc: 0.661, balanced acc: 0.593,weighted_f1: 0.642, 1s, val
- ep: 13/150, loss: 0.266, acc: 0.953, balanced acc: 0.944,weighted_f1: 0.953, 12s, train
- ep: 13/150, loss: 1.196, acc: 0.664, balanced acc: 0.594,weighted_f1: 0.643, 1s, val
- ep: 14/150, loss: 0.259, acc: 0.955, balanced acc: 0.945,weighted_f1: 0.955, 12s, train
- ep: 14/150, loss: 1.210, acc: 0.657, balanced acc: 0.592,weighted_f1: 0.639, 1s, val
- ep: 15/150, loss: 0.249, acc: 0.956, balanced acc: 0.945,weighted_f1: 0.956, 11s, train
- ep: 15/150, loss: 1.227, acc: 0.661, balanced acc: 0.592,weighted_f1: 0.638, 1s, val
- ep: 16/150, loss: 0.237, acc: 0.956, balanced acc: 0.946,weighted_f1: 0.955, 12s, train
- ep: 16/150, loss: 1.246, acc: 0.667, balanced acc: 0.600,weighted_f1: 0.646, 1s, val
- ep: 17/150, loss: 0.227, acc: 0.961, balanced acc: 0.951,weighted_f1: 0.961, 12s, train
- ep: 17/150, loss: 1.231, acc: 0.645, balanced acc: 0.578,weighted_f1: 0.629, 1s, val
- ep: 18/150, loss: 0.219, acc: 0.966, balanced acc: 0.959,weighted_f1: 0.965, 12s, train
- ep: 18/150, loss: 1.265, acc: 0.657, balanced acc: 0.589,weighted_f1: 0.636, 1s, val
- ep: 19/150, loss: 0.215, acc: 0.965, balanced acc: 0.957,weighted_f1: 0.965, 12s, train
- ep: 19/150, loss: 1.248, acc: 0.654, balanced acc: 0.586,weighted_f1: 0.635, 1s, val
- ep: 20/150, loss: 0.205, acc: 0.967, balanced acc: 0.960,weighted_f1: 0.967, 12s, train
- ep: 20/150, loss: 1.257, acc: 0.654, balanced acc: 0.586,weighted_f1: 0.636, 1s, val
- ep: 21/150, loss: 0.197, acc: 0.968, balanced acc: 0.958,weighted_f1: 0.968, 12s, train
- ep: 21/150, loss: 1.269, acc: 0.648, balanced acc: 0.583,weighted_f1: 0.635, 1s, val
⏹️  Early-stopping triggered after 20 epochs
train: loss=0.6475 acc=0.783 balAcc=0.742 f1w=0.779
Saved gates for train to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_2/gates_train.npy
val: loss=1.0696 acc=0.624 balAcc=0.553 f1w=0.607
Saved gates for val to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_2/gates_val.npy
test: loss=0.9368 acc=0.685 balAcc=0.614 f1w=0.669
Saved gates for test to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_2/gates_test.npy
Inference completed for splits: train, val, test
✅ Saved 2043 patients to 'Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_2/patient_data.h5'.

------------------------Final report--------------------------
Runtime 0h24min42s
Fold 2
Architecture MixtureOfAggregators
Data path /lustre/groups/labs/marr/qscd01/workspace/beluga_features_extracted/dinobloom-b
Result folder Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_2
Scheduler ReduceLROnPlateau
Weight decay 0.01
Early stopping 15
Gradient accumulation 16
Seed 38
max. Epochs 150
Learning rate 5e-05
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-3): 4 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): Sequential(
    (0): Linear(in_features=512, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=4, bias=True)
  )
  (head): Sequential(
    (0): Linear(in_features=512, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=8, bias=True)
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
- ep: 1/150, loss: 1.866, acc: 0.299, balanced acc: 0.193,weighted_f1: 0.214, 13s, train
- ep: 1/150, loss: 1.605, acc: 0.434, balanced acc: 0.319,weighted_f1: 0.366, 1s, val
🔖  Saved new best model (metric=1.6053)
- ep: 2/150, loss: 1.518, acc: 0.471, balanced acc: 0.363,weighted_f1: 0.389, 13s, train
- ep: 2/150, loss: 1.392, acc: 0.495, balanced acc: 0.395,weighted_f1: 0.424, 1s, val
🔖  Saved new best model (metric=1.3924)
- ep: 3/150, loss: 1.310, acc: 0.533, balanced acc: 0.437,weighted_f1: 0.475, 13s, train
- ep: 3/150, loss: 1.253, acc: 0.544, balanced acc: 0.451,weighted_f1: 0.488, 1s, val
🔖  Saved new best model (metric=1.2530)
- ep: 4/150, loss: 1.192, acc: 0.588, balanced acc: 0.510,weighted_f1: 0.556, 12s, train
- ep: 4/150, loss: 1.111, acc: 0.575, balanced acc: 0.494,weighted_f1: 0.539, 1s, val
🔖  Saved new best model (metric=1.1109)
- ep: 5/150, loss: 1.045, acc: 0.640, balanced acc: 0.574,weighted_f1: 0.614, 14s, train
- ep: 5/150, loss: 1.149, acc: 0.578, balanced acc: 0.505,weighted_f1: 0.556, 1s, val
- ep: 6/150, loss: 0.911, acc: 0.681, balanced acc: 0.620,weighted_f1: 0.661, 13s, train
- ep: 6/150, loss: 1.054, acc: 0.624, balanced acc: 0.557,weighted_f1: 0.598, 1s, val
🔖  Saved new best model (metric=1.0542)
- ep: 7/150, loss: 0.879, acc: 0.693, balanced acc: 0.649,weighted_f1: 0.682, 14s, train
- ep: 7/150, loss: 1.048, acc: 0.627, balanced acc: 0.554,weighted_f1: 0.596, 1s, val
🔖  Saved new best model (metric=1.0480)
- ep: 8/150, loss: 0.724, acc: 0.748, balanced acc: 0.703,weighted_f1: 0.739, 14s, train
- ep: 8/150, loss: 1.021, acc: 0.630, balanced acc: 0.568,weighted_f1: 0.616, 1s, val
🔖  Saved new best model (metric=1.0209)
- ep: 9/150, loss: 0.609, acc: 0.803, balanced acc: 0.770,weighted_f1: 0.798, 13s, train
- ep: 9/150, loss: 0.998, acc: 0.661, balanced acc: 0.597,weighted_f1: 0.637, 2s, val
🔖  Saved new best model (metric=0.9981)
- ep: 10/150, loss: 0.478, acc: 0.849, balanced acc: 0.824,weighted_f1: 0.847, 14s, train
- ep: 10/150, loss: 1.121, acc: 0.633, balanced acc: 0.574,weighted_f1: 0.623, 1s, val
- ep: 11/150, loss: 0.385, acc: 0.885, balanced acc: 0.864,weighted_f1: 0.884, 12s, train
- ep: 11/150, loss: 1.143, acc: 0.661, balanced acc: 0.614,weighted_f1: 0.648, 2s, val
- ep: 12/150, loss: 0.309, acc: 0.927, balanced acc: 0.917,weighted_f1: 0.926, 12s, train
- ep: 12/150, loss: 1.174, acc: 0.630, balanced acc: 0.573,weighted_f1: 0.631, 1s, val
- ep: 13/150, loss: 0.234, acc: 0.946, balanced acc: 0.938,weighted_f1: 0.946, 11s, train
- ep: 13/150, loss: 1.252, acc: 0.627, balanced acc: 0.575,weighted_f1: 0.624, 1s, val
- ep: 14/150, loss: 0.145, acc: 0.982, balanced acc: 0.977,weighted_f1: 0.982, 12s, train
- ep: 14/150, loss: 1.210, acc: 0.627, balanced acc: 0.568,weighted_f1: 0.618, 1s, val
- ep: 15/150, loss: 0.129, acc: 0.986, balanced acc: 0.982,weighted_f1: 0.986, 12s, train
- ep: 15/150, loss: 1.214, acc: 0.642, balanced acc: 0.586,weighted_f1: 0.633, 1s, val
- ep: 16/150, loss: 0.120, acc: 0.989, balanced acc: 0.988,weighted_f1: 0.989, 11s, train
- ep: 16/150, loss: 1.220, acc: 0.633, balanced acc: 0.574,weighted_f1: 0.627, 1s, val
- ep: 17/150, loss: 0.118, acc: 0.989, balanced acc: 0.987,weighted_f1: 0.988, 13s, train
- ep: 17/150, loss: 1.223, acc: 0.633, balanced acc: 0.570,weighted_f1: 0.624, 1s, val
- ep: 18/150, loss: 0.110, acc: 0.990, balanced acc: 0.987,weighted_f1: 0.990, 12s, train
- ep: 18/150, loss: 1.238, acc: 0.639, balanced acc: 0.577,weighted_f1: 0.632, 1s, val
- ep: 19/150, loss: 0.105, acc: 0.989, balanced acc: 0.986,weighted_f1: 0.989, 14s, train
- ep: 19/150, loss: 1.250, acc: 0.642, balanced acc: 0.583,weighted_f1: 0.636, 1s, val
- ep: 20/150, loss: 0.103, acc: 0.992, balanced acc: 0.989,weighted_f1: 0.992, 12s, train
- ep: 20/150, loss: 1.247, acc: 0.633, balanced acc: 0.573,weighted_f1: 0.627, 1s, val
- ep: 21/150, loss: 0.097, acc: 0.993, balanced acc: 0.992,weighted_f1: 0.993, 11s, train
- ep: 21/150, loss: 1.258, acc: 0.645, balanced acc: 0.590,weighted_f1: 0.641, 1s, val
- ep: 22/150, loss: 0.097, acc: 0.994, balanced acc: 0.993,weighted_f1: 0.994, 12s, train
- ep: 22/150, loss: 1.267, acc: 0.639, balanced acc: 0.577,weighted_f1: 0.632, 1s, val
- ep: 23/150, loss: 0.088, acc: 0.994, balanced acc: 0.993,weighted_f1: 0.994, 13s, train
- ep: 23/150, loss: 1.279, acc: 0.639, balanced acc: 0.577,weighted_f1: 0.635, 1s, val
- ep: 24/150, loss: 0.085, acc: 0.996, balanced acc: 0.996,weighted_f1: 0.996, 11s, train
- ep: 24/150, loss: 1.290, acc: 0.633, balanced acc: 0.568,weighted_f1: 0.625, 1s, val
⏹️  Early-stopping triggered after 23 epochs
train: loss=0.4320 acc=0.858 balAcc=0.835 f1w=0.852
Saved gates for train to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_3/gates_train.npy
val: loss=0.9981 acc=0.661 balAcc=0.597 f1w=0.637
Saved gates for val to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_3/gates_val.npy
test: loss=0.9965 acc=0.663 balAcc=0.590 f1w=0.634
Saved gates for test to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_3/gates_test.npy
Inference completed for splits: train, val, test
✅ Saved 2043 patients to 'Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_3/patient_data.h5'.

------------------------Final report--------------------------
Runtime 0h30min57s
Fold 3
Architecture MixtureOfAggregators
Data path /lustre/groups/labs/marr/qscd01/workspace/beluga_features_extracted/dinobloom-b
Result folder Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_3
Scheduler ReduceLROnPlateau
Weight decay 0.01
Early stopping 15
Gradient accumulation 16
Seed 38
max. Epochs 150
Learning rate 5e-05
Embedding dimension: 768
Initialize dataloaders...
Dataloaders are ready..
cAItomorph(model=MixtureOfAggregators(
  (experts): ModuleList(
    (0-3): 4 x TransformerExpert(
      (projection): Sequential(
        (0): Linear(in_features=768, out_features=512, bias=True)
        (1): ReLU()
      )
      (dropout): Dropout(p=0.1, inplace=False)
      (transformer): TransformerBlocks(
        (layers): ModuleList(
          (0-1): 2 x ModuleList(
            (0): PreNorm(
              (fn): Attention(
                (attend): Softmax(dim=-1)
                (to_qkv): Linear(in_features=512, out_features=1536, bias=False)
                (to_out): Sequential(
                  (0): Linear(in_features=512, out_features=512, bias=True)
                  (1): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
            (1): PreNorm(
              (fn): FeedForward(
                (net): Sequential(
                  (0): Linear(in_features=512, out_features=1024, bias=True)
                  (1): GELU(approximate='none')
                  (2): Dropout(p=0.1, inplace=False)
                  (3): Linear(in_features=1024, out_features=512, bias=True)
                  (4): Dropout(p=0.1, inplace=False)
                )
              )
              (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (norm): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
      (mlp_head): Sequential(
        (0): Linear(in_features=512, out_features=64, bias=True)
        (1): ReLU()
        (2): Linear(in_features=64, out_features=8, bias=True)
      )
    )
  )
  (router_proj): Sequential(
    (0): Linear(in_features=768, out_features=512, bias=True)
    (1): ReLU()
  )
  (router_fc): Sequential(
    (0): Linear(in_features=512, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=4, bias=True)
  )
  (head): Sequential(
    (0): Linear(in_features=512, out_features=64, bias=True)
    (1): ReLU()
    (2): Linear(in_features=64, out_features=8, bias=True)
  )
))
Setup complete.

Using scheduler: ReduceLROnPlateau
Starting training
- ep: 1/150, loss: 1.907, acc: 0.303, balanced acc: 0.198,weighted_f1: 0.215, 13s, train
- ep: 1/150, loss: 1.731, acc: 0.322, balanced acc: 0.204,weighted_f1: 0.197, 1s, val
🔖  Saved new best model (metric=1.7315)
- ep: 2/150, loss: 1.580, acc: 0.413, balanced acc: 0.310,weighted_f1: 0.365, 13s, train
- ep: 2/150, loss: 1.488, acc: 0.475, balanced acc: 0.393,weighted_f1: 0.431, 1s, val
🔖  Saved new best model (metric=1.4880)
- ep: 3/150, loss: 1.497, acc: 0.472, balanced acc: 0.393,weighted_f1: 0.428, 14s, train
- ep: 3/150, loss: 1.517, acc: 0.497, balanced acc: 0.409,weighted_f1: 0.422, 1s, val
- ep: 4/150, loss: 1.317, acc: 0.550, balanced acc: 0.465,weighted_f1: 0.498, 13s, train
- ep: 4/150, loss: 1.290, acc: 0.515, balanced acc: 0.431,weighted_f1: 0.500, 1s, val
🔖  Saved new best model (metric=1.2901)
- ep: 5/150, loss: 1.086, acc: 0.613, balanced acc: 0.546,weighted_f1: 0.586, 14s, train
- ep: 5/150, loss: 1.142, acc: 0.617, balanced acc: 0.549,weighted_f1: 0.596, 1s, val
🔖  Saved new best model (metric=1.1416)
- ep: 6/150, loss: 0.961, acc: 0.661, balanced acc: 0.604,weighted_f1: 0.641, 13s, train
- ep: 6/150, loss: 1.153, acc: 0.598, balanced acc: 0.530,weighted_f1: 0.575, 1s, val
- ep: 7/150, loss: 0.838, acc: 0.713, balanced acc: 0.664,weighted_f1: 0.700, 14s, train
- ep: 7/150, loss: 1.046, acc: 0.635, balanced acc: 0.565,weighted_f1: 0.613, 2s, val
🔖  Saved new best model (metric=1.0464)
- ep: 8/150, loss: 0.731, acc: 0.758, balanced acc: 0.719,weighted_f1: 0.751, 13s, train
- ep: 8/150, loss: 1.101, acc: 0.620, balanced acc: 0.553,weighted_f1: 0.614, 1s, val
- ep: 9/150, loss: 0.626, acc: 0.797, balanced acc: 0.762,weighted_f1: 0.792, 13s, train
- ep: 9/150, loss: 1.073, acc: 0.629, balanced acc: 0.577,weighted_f1: 0.624, 1s, val
- ep: 10/150, loss: 0.517, acc: 0.837, balanced acc: 0.813,weighted_f1: 0.835, 13s, train
- ep: 10/150, loss: 1.175, acc: 0.623, balanced acc: 0.561,weighted_f1: 0.618, 2s, val
- ep: 11/150, loss: 0.437, acc: 0.867, balanced acc: 0.845,weighted_f1: 0.864, 12s, train
- ep: 11/150, loss: 1.100, acc: 0.638, balanced acc: 0.585,weighted_f1: 0.634, 1s, val
- ep: 12/150, loss: 0.295, acc: 0.939, balanced acc: 0.930,weighted_f1: 0.938, 12s, train
- ep: 12/150, loss: 1.099, acc: 0.638, balanced acc: 0.576,weighted_f1: 0.632, 1s, val
- ep: 13/150, loss: 0.279, acc: 0.939, balanced acc: 0.930,weighted_f1: 0.938, 12s, train
- ep: 13/150, loss: 1.108, acc: 0.647, balanced acc: 0.585,weighted_f1: 0.639, 1s, val
- ep: 14/150, loss: 0.265, acc: 0.947, balanced acc: 0.934,weighted_f1: 0.947, 13s, train
- ep: 14/150, loss: 1.118, acc: 0.638, balanced acc: 0.574,weighted_f1: 0.630, 1s, val
- ep: 15/150, loss: 0.251, acc: 0.953, balanced acc: 0.943,weighted_f1: 0.952, 12s, train
- ep: 15/150, loss: 1.125, acc: 0.632, balanced acc: 0.570,weighted_f1: 0.627, 2s, val
- ep: 16/150, loss: 0.239, acc: 0.950, balanced acc: 0.941,weighted_f1: 0.949, 12s, train
- ep: 16/150, loss: 1.131, acc: 0.644, balanced acc: 0.582,weighted_f1: 0.637, 1s, val
- ep: 17/150, loss: 0.232, acc: 0.952, balanced acc: 0.943,weighted_f1: 0.951, 12s, train
- ep: 17/150, loss: 1.134, acc: 0.635, balanced acc: 0.574,weighted_f1: 0.628, 1s, val
- ep: 18/150, loss: 0.221, acc: 0.956, balanced acc: 0.946,weighted_f1: 0.956, 11s, train
- ep: 18/150, loss: 1.149, acc: 0.638, balanced acc: 0.575,weighted_f1: 0.633, 1s, val
- ep: 19/150, loss: 0.214, acc: 0.964, balanced acc: 0.955,weighted_f1: 0.964, 12s, train
- ep: 19/150, loss: 1.155, acc: 0.644, balanced acc: 0.582,weighted_f1: 0.638, 1s, val
- ep: 20/150, loss: 0.205, acc: 0.963, balanced acc: 0.953,weighted_f1: 0.962, 12s, train
- ep: 20/150, loss: 1.165, acc: 0.635, balanced acc: 0.571,weighted_f1: 0.627, 1s, val
- ep: 21/150, loss: 0.190, acc: 0.971, balanced acc: 0.964,weighted_f1: 0.971, 12s, train
- ep: 21/150, loss: 1.171, acc: 0.632, balanced acc: 0.569,weighted_f1: 0.627, 1s, val
- ep: 22/150, loss: 0.185, acc: 0.972, balanced acc: 0.965,weighted_f1: 0.972, 12s, train
- ep: 22/150, loss: 1.167, acc: 0.644, balanced acc: 0.581,weighted_f1: 0.638, 1s, val
⏹️  Early-stopping triggered after 21 epochs
train: loss=0.6731 acc=0.765 balAcc=0.720 f1w=0.749
Saved gates for train to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_4/gates_train.npy
val: loss=1.0464 acc=0.635 balAcc=0.565 f1w=0.613
Saved gates for val to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_4/gates_val.npy
test: loss=0.9752 acc=0.641 balAcc=0.569 f1w=0.609
Saved gates for test to Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_4/gates_test.npy
Inference completed for splits: train, val, test
✅ Saved 2043 patients to 'Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_4/patient_data.h5'.

------------------------Final report--------------------------
Runtime 0h36min44s
Fold 4
Architecture MixtureOfAggregators
Data path /lustre/groups/labs/marr/qscd01/workspace/beluga_features_extracted/dinobloom-b
Result folder Beluga_full/4_experts/Results_5fold_testfixed_dinobloom-b_MixtureOfAggregators_separate_topk_topk1_localheadTrue_router_arch_mlp_seed381/fold_4
Scheduler ReduceLROnPlateau
Weight decay 0.01
Early stopping 15
Gradient accumulation 16
Seed 38
max. Epochs 150
Learning rate 5e-05
